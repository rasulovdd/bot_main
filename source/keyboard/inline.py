from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

async def order_list(guid):
    """ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ó–ù """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="‚úÖ –í—ã–±—Ä–∞—Ç—å",
            callback_data=f'order_{guid}'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def order_list_mini(guid):
    """ –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ó–ù """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="üìù –î–µ—Ç–∞–ª–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è",
            callback_data=f'ordermini_{guid}'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def selected_order():
    """ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑-–Ω–∞—Ä—è–¥ """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑-–Ω–∞—Ä—è–¥",
            callback_data=f'selected_order_ok'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def upload_content(guid, message_id):
    """ –Ω–∞—á–∞—Ç—å —Ä–µ–∂–∏–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤ S3 """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ",
            callback_data=f'upload_{guid}_{message_id}'
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data=f'cancel_{message_id}'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def upload_cancel(message_id):
    """ –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –∑–∞–≥—Ä—É–∑–∫–∏ """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data=f'cancel_{message_id}'
        ),
    ]
    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def upload_1c():
    """ –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ 1–° """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç –∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å",
            callback_data=f'upload1c_ok'
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data=f'cancel1c_ok'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def upload_1c_cancel():
    """ –æ—Ç–º–µ–Ω–∏—Ç—å """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data=f'cancel1c_ok'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def yes_no(guid, message_id):
    """ –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ 1–° """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = [
        InlineKeyboardButton(
            text="üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ",
            callback_data=f'upload_{guid}_{message_id}'
        ),
        InlineKeyboardButton(
            text="‚ùå –ù–µ—Ç",
            callback_data=f'no_ok'
        ),
    ]

    for button in buttons:
        keyboard.insert(button)
    return keyboard

async def orders_list_button(orders_len, my_button):
    """ —Å–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ """
    keyboard = InlineKeyboardMarkup(row_width=8)
    buttons = []
    buttons_num = 1
    my_step = 0
    for x in range(0, orders_len):
        if int(buttons_num) == int(my_button):
            buttons.append(
                InlineKeyboardButton(
                    "‚úñÔ∏è", callback_data="1_1")
            )
        else:
            buttons.append(
                InlineKeyboardButton(
                    buttons_num, callback_data=f"next_{my_step}_{buttons_num}")
            )
        my_step = my_step + 5
        buttons_num = buttons_num + 1
        if x == 7:
            break  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
    
    for button in buttons:
        keyboard.insert(button)
    
    keyboard.add(InlineKeyboardButton(
        "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ó–ù", callback_data="next-all"))
    
    return keyboard

    